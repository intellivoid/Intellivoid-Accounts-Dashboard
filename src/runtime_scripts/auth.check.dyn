<?php

    use DynamicalWeb\Cookies;
    use DynamicalWeb\DynamicalWeb;
    use DynamicalWeb\Exceptions\CookieStorageNotFoundException;
    use DynamicalWeb\Exceptions\RouterException;
    use DynamicalWeb\Exceptions\StorageDriverException;
    use DynamicalWeb\Exceptions\WebApplicationException;
    use DynamicalWeb\Objects\Cookie;

    $public_pages = [
        'avatar',
        'application_icon',
        'api/otl',
        'api/khm',
        'api/coa',
        'authentication/coa/application_error',
        'landing_page',
        'privacy',
        'tos',
        'documentation',
        'gba_mode'
    ];

    $password_recovery_pages = [
        'authentication/recover_password'
    ];

    $unauthorized_pages = [
        'authentication/login',
        'authentication/register'
    ];

    $verification_pages = [
        'authentication/verification/verify',
        'authentication/verification/verify_mobile',
        'authentication/verification/verify_telegram',
        'authentication/verification/verify_recovery_code',
        'authentication/telegram/telegram_poll',
        'authentication/logout'
    ];

    $skip_authentication = false;
    foreach($public_pages as $page)
    {
        if(DYNAMICAL_CURRENT_PAGE == $page)
        {
            $skip_authentication = true;
        }
    }

    define('AUTHENTICATION_SKIPPED', $skip_authentication);

    if(AUTHENTICATION_SKIPPED == false)
    {
        /** @noinspection PhpUnhandledExceptionInspection */
        execute_authentication_check($unauthorized_pages, $verification_pages, $password_recovery_pages);
    }

    /**
     * Checks if the user is allowed to check the authenticated page, if not; prompt the user for authentication.
     *
     * @param array $unauthorized_pages
     * @param array $verification_pages
     * @param array $password_recovery_pages
     * @return void
     * @throws RouterException
     * @throws StorageDriverException
     * @throws WebApplicationException
     */
    function execute_authentication_check(array $unauthorized_pages, array $verification_pages, array $password_recovery_pages)
    {
        $GetParameters = $_GET;
        unset($GetParameters['callback']);

        try
        {
            // Get the cookie storage
            $CookieStorage = Cookies::getCookieStorage('intellivoid_secured_web_session');
        }
        catch(CookieStorageNotFoundException $e)
        {
            // If not found, create it.
            $Cookie = new Cookie('intellivoid_secured_web_session');
            $CookieStorage = Cookies::createCookieStorage($Cookie, false);
            $CookieStorage->Data = array(
                'session_active' => false,
                'account_pubid' => null,
                'account_id' => null,
                'account_email' => null,
                'account_username' => null,
                'sudo_mode' => false,
                'sudo_expires' => 0,
                'verification_required' => false,
                'auto_logout' => 0,
                'host_id' => 0,
                'verification_attempts' => 0,
                'host_cache_ip' => null,
                'host_cache_ua' => null,
                'cache' => array(),
                'cache_refresh' => 0
            );
            Cookies::updateCookieStorage($CookieStorage);
        }

        if(isset($_GET['redirect']))
        {
            $Location =  null;

            switch(strtolower($_GET['redirect']))
            {

                case 'authentication/register':
                    $Location = DynamicalWeb::getRoute('authentication/register', $_GET);
                    break;

                case 'authentication/login':
                default:
                    $Location = DynamicalWeb::getRoute('authentication/login', $_GET);
                    break;
            }

            $RequestHandler = DynamicalWeb::activeRequestHandler();
            $RequestHandler->Redirect = true;
            $RequestHandler->RedirectLocation = DynamicalWeb::getRoute($Location, $_GET);
            return;
        }

        DynamicalWeb::setMemoryObject('(cookie)web_session', $CookieStorage);

        define('WEB_SESSION_ACTIVE', $CookieStorage->Data['session_active']);
        define('WEB_ACCOUNT_PUBID', $CookieStorage->Data['account_pubid']);
        define('WEB_ACCOUNT_ID', $CookieStorage->Data['account_id']);
        define('WEB_ACCOUNT_EMAIL', $CookieStorage->Data['account_email']);
        define('WEB_ACCOUNT_USERNAME', $CookieStorage->Data['account_username']);
        define('WEB_SUDO_MODE', $CookieStorage->Data['sudo_mode']);
        define('WEB_SUDO_EXPIRES', $CookieStorage->Data['sudo_expires']);
        define('WEB_VERIFICATION_REQUIRED', $CookieStorage->Data['verification_required']);
        define('WEB_AUTO_LOGOUT', $CookieStorage->Data['auto_logout']);
        define('WEB_VERIFICATION_ATTEMPTS', $CookieStorage->Data['verification_attempts']);

        if(WEB_SESSION_ACTIVE == false)
        {
            if(DYNAMICAL_CURRENT_PAGE == 'index')
            {
                $RequestHandler = DynamicalWeb::activeRequestHandler();
                $RequestHandler->Redirect = true;
                $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('landing_page');
                return;
            }

            $redirect = true;

            foreach($unauthorized_pages as $page)
            {
                if(DYNAMICAL_CURRENT_PAGE == $page)
                {
                    $redirect = false;
                }
            }

            if($redirect == true)
            {
                $RequestHandler = DynamicalWeb::activeRequestHandler();
                $RequestHandler->Redirect = true;
                $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('authentication/login');
                return;
            }
        }
        else
        {
            if(WEB_VERIFICATION_REQUIRED == true)
            {
                if(time() > WEB_AUTO_LOGOUT || WEB_VERIFICATION_ATTEMPTS > 3)
                {
                    $CookieStorage->Data['session_active'] = false;
                    $CookieStorage->Data['verification_required'] = false;
                    $CookieStorage->Data['auto_logout'] = 0;
                    $CookieStorage->Data['verification_attempts'] = 0;
                    Cookies::updateCookieStorage($CookieStorage);

                    if(time() > WEB_AUTO_LOGOUT)
                    {
                        $GetParameters['callback'] = '107';
                        $RequestHandler = DynamicalWeb::activeRequestHandler();
                        $RequestHandler->Redirect = true;
                        $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('authentication/login', $GetParameters);
                        return;
                    }

                    if(WEB_VERIFICATION_ATTEMPTS > 3)
                    {
                        $GetParameters['callback'] = '108';
                        $RequestHandler = DynamicalWeb::activeRequestHandler();
                        $RequestHandler->Redirect = true;
                        $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('authentication/login', $GetParameters);
                        return;
                    }
                }

                $redirect = true;

                if(isset($Cookie->Data['verification_type']))
                {
                    if($Cookie->Data['verification_type'] == 'PASSWORD_RESET')
                    {
                        foreach($password_recovery_pages as $page)
                        {
                            if(DYNAMICAL_CURRENT_PAGE == $page)
                            {
                                $redirect = false;
                            }
                        }
                    }
                }
                else
                {
                    foreach($verification_pages as $page)
                    {
                        if(DYNAMICAL_CURRENT_PAGE == $page)
                        {
                            $redirect = false;
                        }
                    }
                }

                if($redirect == true)
                {
                    if(isset($Cookie->Data['verification_type']))
                    {
                        if ($Cookie->Data['verification_type'] == 'PASSWORD_RESET')
                        {
                            $RequestHandler = DynamicalWeb::activeRequestHandler();
                            $RequestHandler->Redirect = true;
                            $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('authentication/recover_password', $GetParameters);
                            return;
                        }
                    }
                    else
                    {
                        $RequestHandler = DynamicalWeb::activeRequestHandler();
                        $RequestHandler->Redirect = true;
                        $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('authentication/verification/verify', $GetParameters);
                        return;
                    }
                }
            }
            else
            {
                $redirect = false;

                foreach($unauthorized_pages as $page)
                {
                    if(DYNAMICAL_CURRENT_PAGE == $page)
                    {
                        $redirect = true;
                    }
                }

                if($redirect == true)
                {
                    $RequestHandler = DynamicalWeb::activeRequestHandler();
                    $RequestHandler->Redirect = true;
                    $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('index', $GetParameters);
                    return;
                }
            }

        }
    }


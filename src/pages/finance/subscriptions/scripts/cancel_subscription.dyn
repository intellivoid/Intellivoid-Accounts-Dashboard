<?php

    use DynamicalWeb\DynamicalWeb;
    use IntellivoidSubscriptionManager\Abstracts\SearchMethods\SubscriptionSearchMethod;
    use IntellivoidSubscriptionManager\Exceptions\SubscriptionNotFoundException;
    use IntellivoidSubscriptionManager\IntellivoidSubscriptionManager;

    if(isset($_GET['action']))
    {
        if($_GET['action'] == 'cancel_subscription')
        {
            if(isset($_GET['subscription_id']))
            {
                /** @noinspection PhpUnhandledExceptionInspection */
                cancel_subscription($_GET['subscription_id']);
            }
        }
    }

    /**
     * Cancels an existing subscription
     *
     * @param string $access_id
     * @throws Exception
     */
    function cancel_subscription(string $access_id)
    {
        /** @noinspection PhpUnhandledExceptionInspection */
        if(isset(DynamicalWeb::$globalObjects["subscription_manager"]) == false)
        {
            /** @var IntellivoidSubscriptionManager $SubscriptionManager */
            $SubscriptionManager = DynamicalWeb::setMemoryObject(
                "subscription_manager", new IntellivoidSubscriptionManager()
            );
        }
        else
        {
            /** @var IntellivoidSubscriptionManager $SubscriptionManager */
            $SubscriptionManager = DynamicalWeb::getMemoryObject("subscription_manager");
        }

        try
        {
            $Subscription = $SubscriptionManager->getSubscriptionManager()->getSubscription(
                SubscriptionSearchMethod::byPublicId, $_GET['subscription_id']
            );
        }
        catch (SubscriptionNotFoundException $e)
        {
            $RequestHandler = DynamicalWeb::activeRequestHandler();
            $RequestHandler->Redirect = true;
            $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('finance/subscriptions',
                array('callback' => '100')
            );
            $RequestHandler->execute();
        }
        catch(Exception $e)
        {
            $RequestHandler = DynamicalWeb::activeRequestHandler();
            $RequestHandler->Redirect = true;
            $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('finance/subscriptions',
                array('callback' => '101')
            );
            $RequestHandler->execute();
        }

        try
        {
            /** @noinspection PhpUndefinedVariableInspection */
            $SubscriptionManager->getSubscriptionManager()->cancelSubscription($Subscription);
        }
        catch(Exception $e)
        {
            $RequestHandler = DynamicalWeb::activeRequestHandler();
            $RequestHandler->Redirect = true;
            $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('finance/subscriptions',
                array('callback' => '101')
            );
            $RequestHandler->execute();
        }

        $RequestHandler = DynamicalWeb::activeRequestHandler();
        $RequestHandler->Redirect = true;
        $RequestHandler->RedirectLocation = DynamicalWeb::getRoute('finance/subscriptions',
            array('callback' => '102')
        );
        $RequestHandler->execute();
    }
